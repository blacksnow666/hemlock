package com.twistlet.hemlock.model.entity;


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * HemlockUser generated by hbm2java
 */
@Entity
@Table(name="hemlock_user"
)
public class HemlockUser  implements java.io.Serializable {


     private String username;
     private String password;
     private String name;
     private Set<HemlockUserRole> hemlockUserRoles = new HashSet<HemlockUserRole>(0);

    public HemlockUser() {
    }

	
    public HemlockUser(String username, String password, String name) {
        this.username = username;
        this.password = password;
        this.name = name;
    }
    public HemlockUser(String username, String password, String name, Set<HemlockUserRole> hemlockUserRoles) {
       this.username = username;
       this.password = password;
       this.name = name;
       this.hemlockUserRoles = hemlockUserRoles;
    }
   
     @Id 

    
    @Column(name="username", unique=true, nullable=false, length=75)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="password", nullable=false, length=60)
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="name", nullable=false, length=100)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="hemlockUser")
    public Set<HemlockUserRole> getHemlockUserRoles() {
        return this.hemlockUserRoles;
    }
    
    public void setHemlockUserRoles(Set<HemlockUserRole> hemlockUserRoles) {
        this.hemlockUserRoles = hemlockUserRoles;
    }




}


